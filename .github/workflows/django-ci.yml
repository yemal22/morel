name: Django CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # test:
  #   name: ‚úÖ Test Django App
  #   runs-on: ubuntu-latest
  #   environment: env
  #   services:
  #     postgres:
  #       image: postgres:14
  #       env:
  #         POSTGRES_DB: ${{ secrets.DB_NAME }}
  #         POSTGRES_USER: ${{ secrets.DB_USER }}
  #         POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
  #       ports: ['5432:5432']
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   env:
  #     DB_NAME: ${{ secrets.DB_NAME }}
  #     DB_USER: ${{ secrets.DB_USER }}
  #     DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  #     DB_HOST: localhost
  #     DB_PORT: 5432
  #     SECRET_KEY: dummy_ci_secret
  #     DEBUG: FALSE

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10'

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt

  #     - name: Run migrations
  #       run: python manage.py migrate

  #     - name: Run tests with coverage
  #       run:  coverage run manage.py test portfolio.tests.test_model portfolio.tests.test_view

  #     - name: Upload coverage to Codecov
  #       uses: codecov/codecov-action@v5
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: üõ†Ô∏è Build Docker Image
    runs-on: ubuntu-latest
    environment: env
    # needs: test

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ENV: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in Heroku Container Registry
        run: |
          echo "${{ secrets.HEROKU_API_KEY }}" | docker login --username=${{ secrets.HEROKU_EMAIL }} --password-stdin registry.heroku.com

      - name: Build Docker image
        run: |
          docker build \
            --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} \
            --build-arg SECRET_KEY=${{ secrets.SECRET_KEY }} \
            --build-arg ENV=production \
            -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web .

      - name: Push Docker image to Heroku
        run: |
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web

      - name: List Docker images
        run: docker images

  deploy:
    name: üöÄ Deploy to Heroku
    runs-on: ubuntu-latest
    environment: env
    needs: build

    steps:
      - name: üîÑ Checkout code
        uses: actions/checkout@v3

      - name: üîß Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: üîê Login to Heroku Container Registry
        run: |
          echo "${{ secrets.HEROKU_API_KEY }}" | docker login \
            --username=${{ secrets.HEROKU_EMAIL }} \
            --password-stdin registry.heroku.com

      - name: üöÄ Release image on Heroku
        run: |
          heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}

